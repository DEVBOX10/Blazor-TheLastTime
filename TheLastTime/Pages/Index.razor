@page "/"
@inject IIndexedDbFactory DbFactory

<Title Value="The Last Time"></Title>

@if (!string.IsNullOrEmpty(bootswatchTheme))
{
    <Link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous" />
}
else
{
    <Link rel="stylesheet" href="@("https://stackpath.bootstrapcdn.com/bootswatch/4.5.2/" + bootswatchTheme + "/bootstrap.min.css")" integrity="sha384-8iuq0iaMHpnH2vSyvZMSIqQuUnQA7QM+f6srIdlgBrTSEyd//AWNMyEaSF2yPzNQ" crossorigin="anonymous" />
}
@*<Link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootswatch/4.5.2/cyborg/bootstrap.min.css" integrity="sha384-nEnU7Ae+3lD52AK+RGNzgieBWMnEfgTbRHIwEvp1XXPdqdO6uLTd/NwXbzboqjc2" crossorigin="anonymous" />*@

<div id="container-index" class="container-fluid">
    <div class="row">
        <div class="col-sm-12 col-md-6">
            <fieldset>
                <EditForm Model="@newCategory" OnValidSubmit="@SaveNewCategory">
                    <InputText class="form-control form-control-sm" @bind-Value="@newCategory.Description" placeholder="Add new category..." />
                    <button type="submit" class="btn btn-primary btn-sm">Add</button>

                    <p><Microsoft.AspNetCore.Components.Forms.ValidationSummary /></p>
                    <DataAnnotationsValidator />
                </EditForm>
            </fieldset>

            @if (categoryList != null)
            {
                <fieldset>
                    <EditForm Model="@selectedCategory">
                        <InputSelect class="form-control form-control-sm" Value="@selectedCategory.Id" ValueExpression="@(() => selectedCategory.Id)" ValueChanged="async (long val) => { selectedCategory.Id = val; await LoadHabitList(); }">
                            <option value="0">All categories</option>
                            @foreach (var cat in categoryList)
                            {
                                <option value="@cat.Id">@cat.Description</option>
                            }
                        </InputSelect>

                        @if (selectedCategory.Id != 0)
                        {
                            <button class="btn btn-primary btn-sm" @onclick="@(() => DeleteCategory(selectedCategory))">Delete</button>
                        }
                    </EditForm>
                </fieldset>
            }

            @if (habitList != null)
            {
                <div class="card w-100 h-100">
                    <div class="card-body">
                        @foreach (var habit in habitList)
                        {
                            <div class="d-flex">
                                <div class="flex-fill">@habit.Description</div>
                                <div class="flex-fill">@(habit.TimeList.Count > 0 ? habit.TimeList.Last().DateTime : "Never")</div>
                                <div class="m-1 ml-auto"><button class="btn btn-primary btn-sm" @onclick="@(() => DeleteHabit(habit))">Delete</button></div>
                                <div class="m-1"><button class="btn btn-primary btn-sm" @onclick="@(() => DoneHabit(habit))">Done</button></div>
                                <div class="m-1"><button class="btn btn-primary btn-sm" @onclick="@(() => selectedHabit = habit)">Details</button></div>
                            </div>
                        }
                    </div>
                </div>
            }

            <fieldset>
                <EditForm Model="@newHabit" OnValidSubmit="@SaveNewHabit">
                    <InputText class="form-control form-control-sm" @bind-Value="@newHabit.Description" placeholder="Add new habit..." />
                    <button type="submit" class="btn btn-primary btn-sm">Add</button>

                    <p><Microsoft.AspNetCore.Components.Forms.ValidationSummary /></p>
                    <DataAnnotationsValidator />
                </EditForm>
            </fieldset>

            <InputFile class="form-control form-control-sm" OnChange="@ImportFile" />

            <p>
                @text
            </p>

            <button class="btn btn-primary btn-sm" @onclick="@(() => ExportFile())">Export</button>
        </div>
        @if (selectedHabit != null)
        {
            <div id="overlay" class="col-sm-12 col-md-6">
                <div class="card w-100 h-100">
                    <div class="card-body">
                        @foreach (var time in timeList.Where(t => t.HabitId == selectedHabit.Id))
                        {
                            <div>@time.DateTime</div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>