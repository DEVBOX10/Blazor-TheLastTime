@page "/"
@*@page "/{RouteParameter}"*@

<div class="container-fluid px-1 px-sm-0 py-2 py-sm-3 d-flex flex-grow-1">
    <div id="overlay-parent" class="row mx-0 flex-grow-1">

        <div class="col-md-12 col-lg-6 px-1 px-sm-3">

            <div>
                @foreach (Habit habit in DataService.GetPinnedHabits())
                {
                    <div class="input-group flex-nowrap my-1">
                        <div class="input-group-prepend flex-grow-1">
                            <div class="btn btn-secondary @State.ButtonSizeClass border border-right-0 flex-grow-1 d-flex" @onclick="@(() => { State.SelectedHabit = habit; })">
                                @if (DataService.Settings.ShowHabitId)
                                {
                                    <div class="m-1">@habit.Id</div>
                                }
                                @if (habit.IsPinned)
                                {
                                    <div class="m-1"><span class="fa fa-fw fa-thumbtack"></span></div>
                                }
                                @if (habit.IsStarred)
                                {
                                    <div class="m-1"><span class="fa fa-fw fa-star"></span></div>
                                }
                                @if (habit.IsTwoMinute)
                                {
                                    <div class="m-1"><span class="fas fa-fw fa-hourglass"></span></div>
                                }
                                <div class="m-1">@habit.Description</div>
                                <div class="m-1 ml-auto">@(habit.TimeList.Count > 0 ? ToHighestValueString(habit.ElapsedTime) + " ago" : "Never")</div>
                                @if (habit.GetRatio(DataService.Settings.Ratio) >= 100)
                                {
                                    <div class="m-1 font-weight-bold text-danger">( @habit.GetRatio(DataService.Settings.Ratio).ToString("N0") % )</div>
                                }
                                else if (habit.GetRatio(DataService.Settings.Ratio) >= 80)
                                {
                                    <div class="m-1 font-weight-bold text-warning">( @habit.GetRatio(DataService.Settings.Ratio).ToString("N0") % )</div>
                                }
                                else if (habit.TimeList.Count > 1)
                                {
                                    <div class="m-1 font-weight-bold text-info">( @habit.GetRatio(DataService.Settings.Ratio).ToString("N0") % )</div>
                                }
                                else
                                {
                                    <div class="m-1"><span class="fa fa-fw fa-exclamation"></span></div>
                                }
                            </div>
                        </div>
                        <div class="input-group-append">
                            <Button Color="Color.Primary" Outline="true" Size="@State.Size" @onclick="@(() => OnHabitDone(habit))"><span class="fa fa-fw fa-check"></span></Button>
                        </div>
                    </div>
                }
            </div>

            @if (editCategory)
            {
                <div class="input-group flex-nowrap">
                    <TextEdit Size="@State.Size" @bind-Text="@State.SelectedCategory.Description" Placeholder="Add new category..." />
                    <div class="input-group-append">
                        <Button Color="Color.Primary" Outline="true" Size="@State.Size" @onclick="@(async () => { await DataService.SaveCategory(State.SelectedCategory); editCategory = false; })"><span class="fa fa-fw fa-save"></span></Button>
                        <Button Color="Color.Primary" Outline="true" Size="@State.Size" @onclick="@(() => { editCategory = false; })"><span class="fa fa-fw fa-times"></span></Button>
                    </div>
                </div>
            }
            else
            {
                <div class="input-group flex-nowrap">
                    <div class="input-group-prepend">
                        <Button Color="Color.Primary" Outline="true" Size="@State.Size" @onclick="@(() => { State.NewCategory(); editCategory = true; })"><span class="fa fa-fw fa-plus"></span></Button>
                    </div>

                    <Select TValue="long" Size="@State.Size" SelectedValue="@State.SelectedCategoryId" SelectedValueChanged="async (long val) => { State.SelectedCategoryId = val; }">
                        <SelectItem Value="0">All categories</SelectItem>
                        @foreach (Category cat in DataService.CategoryList)
                        {
                            <SelectItem Value="@cat.Id">@cat.Description</SelectItem>
                        }
                    </Select>

                    @if (State.SelectedCategoryId > 1)
                    {
                        <div class="input-group-append">
                            <Button Color="Color.Primary" Outline="true" Size="@State.Size" @onclick="@(() => { editCategory = true; })"><span class="fa fa-fw fa-edit"></span></Button>

                            <Button Color="Color.Primary" Outline="true" Size="@State.Size" @onclick="@(async () => { await DataService.DeleteCategory(State.SelectedCategory); State.SelectedCategoryId = 0; })"><span class="fa fa-fw fa-trash-alt"></span></Button>
                        </div>
                    }
                </div>
            }

            <div>
                @foreach (Habit habit in DataService.GetHabits(State.SelectedCategoryId))
                {
                    <div class="input-group flex-nowrap my-1">
                        <div class="input-group-prepend flex-grow-1">
                            <div class="btn btn-secondary @State.ButtonSizeClass border border-right-0 flex-grow-1 d-flex" @onclick="@(() => { State.SelectedHabit = habit; })">
                                @if (DataService.Settings.ShowHabitId)
                                {
                                    <div class="m-1">@habit.Id</div>
                                }
                                @if (habit.IsStarred)
                                {
                                    <div class="m-1"><span class="fa fa-fw fa-star"></span></div>
                                }
                                @if (habit.IsTwoMinute)
                                {
                                    <div class="m-1"><span class="fas fa-fw fa-hourglass"></span></div>
                                }
                                <div class="m-1">@habit.Description</div>
                                <div class="m-1 ml-auto">@(habit.TimeList.Count > 0 ? ToHighestValueString(habit.ElapsedTime) + " ago" : "Never")</div>
                                @if (habit.GetRatio(DataService.Settings.Ratio) >= 100)
                                {
                                    <div class="m-1 font-weight-bold text-danger">( @habit.GetRatio(DataService.Settings.Ratio).ToString("N0") % )</div>
                                }
                                else if (habit.GetRatio(DataService.Settings.Ratio) >= 80)
                                {
                                    <div class="m-1 font-weight-bold text-warning">( @habit.GetRatio(DataService.Settings.Ratio).ToString("N0") % )</div>
                                }
                                else if (habit.TimeList.Count > 1)
                                {
                                    <div class="m-1 font-weight-bold text-info">( @habit.GetRatio(DataService.Settings.Ratio).ToString("N0") % )</div>
                                }
                                else
                                {
                                    <div class="m-1"><span class="fa fa-fw fa-exclamation"></span></div>
                                }
                            </div>
                        </div>
                        <div class="input-group-append">
                            <Button Color="Color.Primary" Outline="true" Size="@State.Size" @onclick="@(() => OnHabitDone(habit))"><span class="fa fa-fw fa-check"></span></Button>
                        </div>
                    </div>
                }
            </div>

            <div class="py-5"></div>

            <Button class="btn btn-lg btn-primary rounded-circle add-habit" @onclick="@(() => { State.NewHabit(); })"><span class="fa fa-fw fa-plus"></span></Button>
        </div>

        <TheLastTime.Pages.SelectedHabit />
    </div>
</div>