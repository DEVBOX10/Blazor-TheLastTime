<Microsoft.AspNetCore.Components.Web.Extensions.Head.Title Value="The last time"></Microsoft.AspNetCore.Components.Web.Extensions.Head.Title>

@if (bootswatchThemeDict.ContainsKey(BootswatchTheme))
{
    <Microsoft.AspNetCore.Components.Web.Extensions.Head.Link rel="stylesheet" href="@("https://stackpath.bootstrapcdn.com/bootswatch/4.5.2/" + BootswatchTheme + "/bootstrap.min.css")" integrity="@(bootswatchThemeDict[BootswatchTheme])" crossorigin="anonymous" />
}
else
{
    <Microsoft.AspNetCore.Components.Web.Extensions.Head.Link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous" />
}

<div class="top-row navbar navbar-dark bg-primary">
    <a class="navbar-text" href="https://github.com/Jinjinov/TheLastTime" target="_blank"><span class="fab fa-github"></span></a>
    <a class="navbar-text" href="">When was the last time?</a>

    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass">
    <ul class="nav flex-column">

        <li class="nav-item px-2 pt-2">
            <Check TValue="bool" Checked="@DataService.Settings.ShowOnlyStarred" CheckedChanged="@(async (val) => { DataService.Settings.ShowOnlyStarred = val; await DataService.SaveSettings(); })"><span class="text-light">Show only starred</span></Check>
        </li>

        <li class="nav-item px-2 pt-2">
            <Check TValue="bool" Checked="@DataService.Settings.ShowOnlyOverdue" CheckedChanged="@(async (val) => { DataService.Settings.ShowOnlyOverdue = val; await DataService.SaveSettings(); })"><span class="text-light">Show only overdue</span></Check>
        </li>

        <li class="nav-item px-2 pt-2">
            <Field>
                <FieldLabel Class="text-light">Export file format:</FieldLabel>
                <RadioGroup TValue="bool" Name="format" @bind-CheckedValue="@allData">
                    <Radio TValue="bool" Value="true"><span class="text-light">Everything (json)</span></Radio>
                    <Radio TValue="bool" Value="false"><span class="text-light">Printable (yaml)</span></Radio>
                </RadioGroup>
            </Field>
        </li>

        <li class="nav-item px-2 pb-2">
            <Button Color="Color.Primary" Size="@State.ButtonSize" Block="true" @onclick="@(() => ExportFile())">Export</Button>
        </li>
        <li class="nav-item p-2">
            <label for="file-upload" class="d-block btn @State.ButtonSizeClass btn-primary mb-0">Import</label>
            <InputFile id="file-upload" class="d-none" OnChange="@ImportFile" />
        </li>
        <li class="nav-item p-2">
            <Button Color="Color.Primary" Size="@State.ButtonSize" Block="true" @onclick="@(async () => { await DataService.ClearData(); NavigationManager.NavigateTo("/", true); })">Delete all</Button>
        </li>

        <li class="nav-item px-2 pt-2">
            <Field>
                <FieldLabel Class="text-light">Size:</FieldLabel>
                <Select TValue="string" MaxVisibleItems="3" Size="@State.Size" SelectedValue="@ElementSize" SelectedValueChanged="async (string val) => { ElementSize = val; }">
                    @foreach (string size in elementSizes)
                    {
                        <SelectItem Value="@size">@size</SelectItem>
                    }
                </Select>
            </Field>
        </li>

        <li class="nav-item px-2 py-0">
            <Field>
                <FieldLabel Class="text-light">Theme:</FieldLabel>
                <Select TValue="string" MaxVisibleItems="@(bootswatchThemeDict.Count + 1)" Size="@State.Size" SelectedValue="@BootswatchTheme" SelectedValueChanged="async (string val) => { BootswatchTheme = val; }">
                    <SelectItem Value="@("default")">default</SelectItem>
                    @foreach (string theme in bootswatchThemeDict.Keys)
                    {
                        <SelectItem Value="@theme">@theme</SelectItem>
                    }
                </Select>
            </Field>
        </li>

    </ul>
</div>
