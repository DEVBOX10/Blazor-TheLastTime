
@if (State.SelectedToDo == ToDo && State.EditToDo)
{
    <div class="input-group flex-nowrap mb-1">
        <TextEdit Size="@Theme.Size" Text="@ToDo.Description" TextChanged="@OnDescriptionChanged" />
        <div class="input-group-append">
            <Button Color="Color.Primary" Outline="true" Size="@Theme.Size" @onclick="@(() => { State.EditToDo = false; })"><span class="fa fa-fw fa-save"></span></Button>
            <Button Color="Color.Primary" Outline="true" Size="@Theme.Size" @onclick="@(() => { State.EditToDo = false; })"><span class="fa fa-fw fa-times"></span></Button>
        </div>
    </div>

    <MemoEdit Class="text-monospace" Rows="@ToDo.NotesLines" Text="@ToDo.Notes" TextChanged="@OnNotesChanged" Placeholder="Add notes" />
}
else
{
    <div class="input-group flex-nowrap mb-1 d-flex">
        <TextEdit Size="@Theme.Size" ReadOnly="true" Text="@ToDo.Description" />
        <div class="input-group-append">
            <Button Color="Color.Primary" Outline="true" Size="@Theme.Size" @onclick="@(() => { State.SelectedToDo = ToDo; State.EditToDo = true; })"><span class="fa fa-fw fa-edit"></span></Button>
            <Button Color="Color.Primary" Outline="true" Size="@Theme.Size" @onclick="@(() => { State.SelectedToDo = null; })"><span class="fas fa-fw fa-trash-alt"></span></Button>
        </div>
    </div>

    <MemoEdit Class="text-monospace" ReadOnly="true" Rows="@ToDo.NotesLines" Text="@ToDo.Notes" Placeholder="Edit task to add notes" />
}