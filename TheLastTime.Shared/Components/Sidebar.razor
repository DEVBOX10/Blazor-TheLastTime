
<div class="top-row navbar navbar-dark bg-primary px-2 px-sm-3 px-md-2">
    <button id="toggle-nav-menu" class="navbar-toggler" @onclick="ToggleSidebar">
        <span class="fa fa-fw fa-bars"></span>
    </button>

    <span class="navbar-text" role="button" id="ididit" @onclick="ShowHelp">ididit!</span>

    <button class="navbar-toggler" @onclick="ToggleOptions">
        <span class="fa fa-fw fa-cog"></span>
    </button>
</div>

<div class="@SidebarCssClass">

    @if (State.SelectedTab == "Habits")
    {
        <SettingsComponent />

        @*<OptionsComponent />*@
    }
    else
    {
        <CategoryTreeComponent />
    }

</div>

@*
    // TODO: Sidebar should have the same Header as MainLayout (currently "main menu" is part of Sidebar)

    // TODO: Sidebar should scroll independantly

    html,body {
        height: 100%;
    }

    https://stackoverflow.com/questions/53896925/bootstrap-how-to-create-a-full-screen-layout-with-scrollable-columns
    https://www.codeply.com/go/ouc3hddx5i
    <div class="container-fluid h-100 d-flex flex-column">
        <div class="row flex-shrink-0">
            <div class="col-12 border">Header</div>
        </div>
        <div class="row flex-grow-1 overflow-hidden">
            <div class="col-2 border mh-100" style="overflow-y: auto;">Sidebar</div>
            <div class="col-4 border mh-100" style="overflow-y: auto;">Article list</div>
            <div class="col-6 border mh-100" style="overflow-y: auto;">Article content</div>
        </div>
        <div class="row flex-shrink-0">
            <div class="col-12 border">Footer</div>
        </div>
    </div>

    https://stackoverflow.com/questions/35025164/how-can-i-create-scrollable-columns-in-bootstrap

    <div class="container-fluid h-100 d-flex flex-column">
        <div class="row flex-shrink-0">
            <div class="col-12 border">Header</div>
        </div>
        <div class="row flex-fill" style="min-height:0">
            <div class="col-2 border mh-100" style="overflow-y: auto;">Sidebar</div>
            <div class="col-4 border mh-100" style="overflow-y: auto;">Article list</div>
            <div class="col-6 border mh-100" style="overflow-y: auto;">Article content</div>
        </div>
        <div class="row flex-shrink-0">
            <div class="col-12 border">Footer</div>
        </div>
    </div>

    flex-grow-1 is only setting flex-grow:1 therefore has no impact on flex-basis or flex-shrink.
    whereas, flex-fill is setting...
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: auto;
    Effectively, flex: 1 1 auto; and flex-grow: 1 are the same.
    This is because of the way flexbox works by default.
    Therefore, flex-fill and flex-grow-1 can be used interchangeably.

    https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size
    https://stackoverflow.com/questions/43311943/prevent-content-from-expanding-grid-items
    Grid items have an initial size of min-width: auto and min-height: auto.
    You can override these defaults by setting flex items to:
        min-width: 0
        min-height: 0
        overflow: hidden (or any other value, except visible)
    That is why we need
        style="min-height:0"
        or
        class="overflow-hidden"

    https://stackoverflow.com/questions/22752637/how-to-implement-responsive-independently-scrolling-panes-in-bootstrap
    https://www.codeply.com/go/LIaOWljJm8
    <div class="container-fluid d-flex flex-column vh-100">
        <div class="row flex-shrink-0">
            Header
        </div>
        <div class="row flex-grow-1 overflow-hidden">
            <div class="col-2 mh-100 overflow-auto"></div>
            <div class='col mh-100 overflow-auto'></div>
        </div>
        <div class="row flex-shrink-0">
            Footer
        </div>
    </div>
*@