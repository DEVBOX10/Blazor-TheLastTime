<div id="overlay" class="col-lg-12 col-xl-6 px-1 px-sm-3 d-flex">
    <div class="card flex-grow-1">

        <div class="card-body p-2 p-sm-3">

            @if (State.SelectedGoal != null)
            {
                <Button Color="Color.Primary" Outline="true" Size="@Theme.Size" @onclick="@(() => State.ShowSelectedGoalHabits = true)"><span class="fa fa-fw fa-plus"></span></Button>

                if (State.ShowSelectedGoalHabits && DataService.HabitList.Except(State.SelectedGoal.HabitList).Any())
                {
                    <Select TValue="long" Size="@Theme.Size" SelectedValue="@State.SelectedGoalSelectedHabitId" SelectedValueChanged="(long val) => { SelectedHabitValueChanged(val); }">
                        <SelectItem Value="0" disabled selected>Select</SelectItem>
                        @foreach (Habit habit in DataService.HabitList.Except(State.SelectedGoal.HabitList))
                        {
                            <SelectItem Value="@habit.Id">@habit.Description</SelectItem>
                        }
                    </Select>
                }

                @foreach (Habit habit in State.SelectedGoal.HabitList)
                {
                    <HabitComponent Habit="habit" />
                }

                <Button Color="Color.Primary" Outline="true" Size="@Theme.Size" @onclick="@(() => State.ShowSelectedGoalTasks = true)"><span class="fa fa-fw fa-plus"></span></Button>

                if (State.ShowSelectedGoalTasks && DataService.TaskList.Except(State.SelectedGoal.TaskList).Any())
                {
                    <Select TValue="long" Size="@Theme.Size" SelectedValue="@State.SelectedGoalSelectedTaskId" SelectedValueChanged="(long val) => { SelectedTaskValueChanged(val); }">
                        <SelectItem Value="0" disabled selected>Select</SelectItem>
                        @foreach (Tasky task in DataService.TaskList.Except(State.SelectedGoal.TaskList))
                        {
                            <SelectItem Value="@task.Id">@task.Description</SelectItem>
                        }
                    </Select>
                }

                @foreach (Tasky task in State.SelectedGoal.TaskList)
                {
                    <TaskComponent Task="task" />
                }
            }

        </div>

    </div>
</div>